# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    v1.docs.serverless.com
#
# Happy Coding!

service: interns-portal-test # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs4.3

# you can overwrite defaults here
#defaults:
#  stage: dev
#  region: us-east-1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#  exclude:
#    - exclude-me.js
#  artifact: my-service-code.zip

functions:
  Users:
    handler: users/usersHandler.users
    events:
      - http:
          path: users
          method: get
          integration: lambda
          request: ${file(./templates.yml):request}
      - http:
          path: users/user
          method: post
          integration: lambda
          request: ${file(./templates.yml):request}
      - http:
          path: users/status/{status}
          method: get
          integration: lambda
          request: ${file(./templates.yml):request}
      - http:
          path: users/user/{id}
          method: get
          integration: lambda
          request: ${file(./templates.yml):request}
      - http:
          path: users/stat/{stat}
          method: get
          integration: lambda
          request: ${file(./templates.yml):request}


  Tasks:
    handler: tasks/tasksHandler.tasks
    events:
      - http:
          path: tasks/all
          method: get
          integration: lambda
          request: ${file(./templates.yml):request}
      - http:
          path: tasks/newTask
          method: post
          integration: lambda
          request: ${file(./templates.yml):request}
      - http:
          path: tasks/userTask/{id}
          method: get
          integration: lambda
          request: ${file(./templates.yml):request}
      - http:
          path: tasks/update/userTask
          method: post
          integration: lambda
          request: ${file(./templates.yml):request}
      - http:
          path: tasks/disableTask
          method: post
          integration: lambda
          request: ${file(./templates.yml):request}




# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    newResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: newBucket